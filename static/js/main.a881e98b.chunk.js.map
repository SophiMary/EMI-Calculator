{"version":3,"sources":["Components/EmiCalculator.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","bg","width","mainHeader","padding","breakpoints","up","bolder","fontWeight","margin","topHeadingSubTitle","color","maxWidth","root","flexGrow","paper","boxShadow","carsTextField","borderBottomColor","amountSection","marginBottom","display","border","amountLabel","background","fontSize","amountInput","inputLabels","amountInputStyle","outline","sliderInputValue","justifyContent","sliderInputLabel","borderBottom","sliderValues","sliderUnit","marginLeft","emiSection","textAlign","alignItems","height","down","emiValueSection","emiValue","emiRupeeIcon","marginRight","UserSlider","withStyles","thumb","marginTop","track","borderRadius","rail","backgroundColor","Slider","SliderMarks","marksTenure","value","label","marksInt","marksDownPayment","emiCalculator","classes","React","useState","amount","setAmount","downPayment","setDownPayment","tenure","setTenure","interest","setInterest","downPaymentPaid","Math","round","amountToBePaid","interestPerMonth","emi","pow","intAmount","totalPayableAmount","data","labels","datasets","Box","className","Typography","variant","noValidate","autoComplete","Grid","container","spacing","item","xs","sm","md","lg","Paper","TextField","id","htmlFor","min","type","name","Number","onChange","event","target","dValue","valueLabelDisplay","marks","max","tValue","iValue","step","thousandSeparator","thousandsGroupStyle","prefix","style","options","rotation","PI","circumference","responsive","legend","position","onClick","e","stopPropagation","fontColor","animation","duration","animateRotate","animateScale","tooltips","callbacks","tooltipItem","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a881e98b.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport {\n    Box,\n    createStyles,\n    Grid,\n    Paper,\n    Slider,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport NumberFormat from \"react-number-format\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        bg: {\n            width: \"100%\",\n        },\n        mainHeader: {\n            padding: \"10%\",\n            [theme.breakpoints.up(\"sm\")]: {\n                padding: \"60px 50px\",\n            },\n            color: \"#F75D33\",\n        },\n        bolder: {\n            fontWeight: \"bold\",\n            margin: \"5px 0px\",\n        },\n        topHeadingSubTitle: {\n            color: \"#fff\",\n            maxWidth: \"800px\",\n        },\n        root: {\n            flexGrow: 1,\n            margin: \"40px 20px 20px\",\n        },\n        paper: {\n            boxShadow: \"none\",\n        },\n        carsTextField: {\n            width: \"100%\",\n            padding: \"10px\",\n            '& .MuiFormLabel-colorSecondary.Mui-focused': {\n                color: \"#F75D33\",\n            },\n            '& .MuiInput-colorSecondary.MuiInput-underline:after': {\n                borderBottomColor: \"#F75D33\",\n            },\n        },\n        amountSection: {\n            marginBottom: \"40px\",\n            display: \"flex\",\n            border: \"1px solid #F75D33\",\n        },\n        amountLabel: {\n            padding: \"6px 10px\",\n            background: \"#F75D33\",\n            color: \"#fff\",\n            fontSize: \"22px\",\n        },\n        amountInput: {\n            padding: \"6px 10px\",\n            fontSize: \"22px\",\n            color: \"#000\",\n            display: \"flex\",\n        },\n        inputLabels: {\n            boxShadow: \"none\",\n            marginBottom: \"40px\",\n        },\n        amountInputStyle: {\n            border: \"none\",\n            fontSize: \"22px\",\n            outline: \"none\",\n        },\n        sliderInputValue: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n        },\n        sliderInputLabel: {\n            borderBottom: \"1px solid #F75D33\",\n        },\n        sliderValues: {\n            border: \"1px solid #7F8388\",\n            padding: \"2px 2px 2px 32px\",\n            width: \"fit-content\",\n        },\n        sliderUnit: {\n            background: \"#EEEDF0\",\n            marginLeft: \"5px\",\n            padding: \"0 5px\",\n        },\n        emiSection: {\n            background: \"#EEEDF0\",\n            margin: \"80px 20px\",\n            textAlign: \"center\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            [theme.breakpoints.down(\"sm\")]: {\n                margin: \"20px 10px\",\n            },\n        },\n        emiValueSection: {\n            boxShadow: \"none\",\n            background: \"#EEEDF0\",\n            padding: \"60px 0\",\n            [theme.breakpoints.down(\"sm\")]: {\n                padding: \"20px\",\n            },\n        },\n        emiValue: {\n            color: \"#F75D33\",\n            fontWeight: \"bold\",\n            border: \"none\",\n            outline: \"none\",\n            background: \"none\",\n            fontSize: \"20px\",\n            textAlign: \"center\",\n            margin: \"10px auto 20px\",\n        },\n        emiRupeeIcon: {\n            marginRight: \"10px\",\n        },\n    })\n);\n\nconst UserSlider = withStyles({\n    root: {\n        color: \"#FEC002\",\n        height: 10,\n    },\n    thumb: {\n        height: 12,\n        width: 15,\n        background: \"#FEC002\",\n        marginTop: -1,\n        marginLeft: -1,\n    },\n    track: {\n        height: 10,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 10,\n        borderRadius: 4,\n        backgroundColor: \"#7F8388\",\n    },\n})(Slider)\n\nconst SliderMarks = {\n    marksTenure: [\n        {\n            value: 0,\n            label: \"0\",\n        },\n        {\n            value: 84,\n            label: \"84\",\n        },\n    ],\n    marksInt: [\n        {\n            value: 0,\n            label: \"0\",\n        },\n        {\n            value: 20,\n            label: \"20\",\n        },\n    ],\n    marksDownPayment: [\n        {\n            value: 0,\n            label: \"0\",\n        },\n        {\n            value: 100,\n            label: \"100\",\n        },\n    ],\n}\n\nexport default function emiCalculator() {\n    const classes = useStyles();\n    const [amount, setAmount] = React.useState(100000);\n    const [downPayment, setDownPayment] = React.useState(30);\n    const [tenure, setTenure] = React.useState(12);\n    const [interest, setInterest] = React.useState(10);\n    const maxDownPayment = 100;\n    const maxTenure = 84;\n    const maxInt = 20;\n    const minAmount = 0;\n\n    let downPaymentPaid = Math.round(amount * (downPayment / 100));\n    let amountToBePaid = downPayment ? amount - downPaymentPaid : amount;\n    let interestPerMonth = interest / 1200;\n    let emi = interest ? (tenure\n        ? Math.round(\n            (amountToBePaid * interestPerMonth) /\n            (1 - Math.pow(1 / (1 + interestPerMonth), tenure))\n        )\n        : 0) : amountToBePaid / tenure;\n    let loanAmount = emi * tenure + downPaymentPaid;\n    let intAmount = tenure && interest ? loanAmount - amount : 0;\n    let totalPayableAmount = amountToBePaid + intAmount;\n\n    // Graph Data\n    const data = {\n        labels: [\n            `Loan Amount: ₹ ${amountToBePaid}`,\n            `Interest Amount: ₹ ${intAmount}`,\n        ],\n        datasets: [\n            {\n                data: [amountToBePaid, intAmount],\n                backgroundColor: [\"#2CB742\", \"#FEC002\"],\n            },\n        ],\n    }\n    return (\n        <Box className={classes.bg}>\n            <Box className={classes.mainHeader}>\n                <Typography className={classes.bolder} variant=\"h2\">\n                    EMI Calculator\n                </Typography>\n            </Box>\n            <div className={classes.root}>\n                <form noValidate autoComplete=\"off\">\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={12} md={12} lg={4}>\n                            <Paper className={classes.paper}>\n                                <TextField\n                                    className={classes.carsTextField}\n                                    id=\"standard-basic\"\n                                    label=\"Enter Brand Name\"\n                                    color=\"secondary\"\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} lg={4}>\n                            <Paper className={classes.paper}>\n                                <TextField\n                                    className={classes.carsTextField}\n                                    id=\"standard-basic\"\n                                    label=\"Enter Model Name\"\n                                    color=\"secondary\"\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12} lg={4}>\n                            <Paper className={classes.paper}>\n                                <TextField\n                                    className={classes.carsTextField}\n                                    id=\"standard-basic\"\n                                    label=\"Enter Variant\"\n                                    color=\"secondary\"\n                                />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={12} md={12} lg={4}>\n                        <Paper className={classes.paper}>\n                            <form>\n                                <div className={classes.amountSection}>\n                                    <div className={classes.amountLabel}>\n                                        <label htmlFor=\"amount\">Amount</label>\n                                    </div>\n                                    <div className={classes.amountInput}>\n                                        <span>₹</span>\n                                        <input\n                                            className={classes.amountInputStyle}\n                                            min={minAmount}\n                                            type=\"number\"\n                                            name=\"amount\"\n                                            value={Number(amount)}\n                                            onChange={(event) => {\n                                                setAmount(event.target.value)\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                            </form>\n                        </Paper>\n                        {/* Down Payment   */}\n                        <Paper className={classes.paper}>\n                            <div className={classes.sliderInputValue}>\n                                <Paper className={classes.inputLabels}>\n                                    <Typography>\n                                        <strong>\n                                            <span className={classes.sliderInputLabel}>\n                                                Down Payment\n                      </span>{\" \"}\n                      (%)\n                    </strong>\n                                    </Typography>\n                                </Paper>\n                                <Paper className={classes.inputLabels}>\n                                    <Typography className={classes.sliderValues}>\n                                        {downPayment}\n                                        <span className={classes.sliderUnit}>%</span>\n                                    </Typography>\n                                </Paper>\n                            </div>\n                            <UserSlider\n                                value={downPayment}\n                                onChange={(event, dValue) => {\n                                    setDownPayment(dValue)\n                                }}\n                                valueLabelDisplay=\"on\"\n                                marks={SliderMarks.marksDownPayment}\n                                max={maxDownPayment}\n                            />\n                        </Paper>\n                        {/* Loan Tenure */}\n                        <Paper className={classes.paper}>\n                            <div className={classes.sliderInputValue}>\n                                <Paper className={classes.inputLabels}>\n                                    <Typography>\n                                        <strong>\n                                            <span className={classes.sliderInputLabel}>\n                                                Loan Tenure\n                      </span>{\" \"}\n                      (In Months)\n                    </strong>\n                                    </Typography>\n                                </Paper>\n                                <Paper className={classes.inputLabels}>\n                                    <Typography className={classes.sliderValues}>\n                                        {tenure}\n                                        <span className={classes.sliderUnit}>M</span>\n                                    </Typography>\n                                </Paper>\n                            </div>\n                            <UserSlider\n                                value={tenure}\n                                onChange={(event, tValue) => {\n                                    setTenure(tValue)\n                                }}\n                                valueLabelDisplay=\"on\"\n                                marks={SliderMarks.marksTenure}\n                                max={maxTenure}\n                            />\n                        </Paper>\n                        {/* Interest Rate */}\n                        <Paper className={classes.paper}>\n                            <div className={classes.sliderInputValue}>\n                                <Paper className={classes.inputLabels}>\n                                    <Typography>\n                                        <strong>\n                                            <span className={classes.sliderInputLabel}>\n                                                Interest Rate\n                      </span>{\" \"}\n                      (Per Annum)\n                    </strong>\n                                    </Typography>\n                                </Paper>\n                                <Paper className={classes.inputLabels}>\n                                    <Typography className={classes.sliderValues}>\n                                        {interest}\n                                        <span className={classes.sliderUnit}>%</span>\n                                    </Typography>\n                                </Paper>\n                            </div>\n                            <UserSlider\n                                value={interest}\n                                onChange={(event, iValue) => {\n                                    setInterest(iValue)\n                                }}\n                                valueLabelDisplay=\"on\"\n                                step={0.1}\n                                marks={SliderMarks.marksInt}\n                                max={maxInt}\n                            />\n                        </Paper>\n                    </Grid>\n                    {/* EMI Section */}\n                    <Grid className={classes.emiSection} item xs={12} sm={12} md={12} lg={4}>\n                        <Paper className={classes.emiValueSection}>\n                            <Typography className={classes.bolder} variant=\"h6\">\n                                Equated Monthly Installments (EMI)\n              </Typography>\n                            <NumberFormat\n                                className={classes.emiValue}\n                                thousandSeparator={true}\n                                thousandsGroupStyle=\"lakh\"\n                                prefix={\"₹ \"}\n                                value={emi}\n                            />\n                            <Typography className={classes.bolder} variant=\"h6\">\n                                Total Amount Payable\n              </Typography>\n                            <NumberFormat\n                                style={{ marginBottom: 0 }}\n                                className={classes.emiValue}\n                                thousandSeparator={true}\n                                thousandsGroupStyle=\"lakh\"\n                                prefix={\"₹ \"}\n                                value={totalPayableAmount}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={3}>\n                        <Paper className={classes.paper}>\n                            <Doughnut\n                                data={data}\n                                width={100}\n                                height={100}\n                                options={{\n                                    rotation: 1 * Math.PI,\n                                    circumference: 1 * Math.PI,\n                                    responsive: true,\n                                    legend: {\n                                        position: \"bottom\",\n                                        onClick: (e) => e.stopPropagation(),\n                                        labels: {\n                                            fontSize: 18,\n                                            fontColor: \"#F75D33\",\n                                        },\n                                    },\n                                    animation: {\n                                        duration: 2000,\n                                        animateRotate: true,\n                                        animateScale: false,\n                                    },\n                                    tooltips: {\n                                        callbacks: {\n                                            label: function (tooltipItem, data) {\n                                                let label = data.labels[tooltipItem.index]\n                                                return \" \" + label\n                                            },\n                                        },\n                                    },\n                                }}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </Box>\n    );\n}\n","import EmiCalculator from \"./Components/EmiCalculator\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EmiCalculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}